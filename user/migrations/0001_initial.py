# Generated by Django 5.1.4 on 2025-09-14 22:50

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=255)),
                ('permissions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SendOtp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('code', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_password', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('DELETED', 'DELETED'), ('REGISTERED', 'REGISTERED'), ('INVITED', 'INVITED')], default='REGISTERED', max_length=255, null=True)),
                ('invitation_status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('EXPIRED', 'EXPIRED'), ('USED', 'USED')], default='ACTIVE', null=True)),
                ('invite_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('role_status', models.CharField(blank=True, choices=[('ASSIGNED', 'ASSIGNED'), ('UNASSIGNED', 'UNASSIGNED')], max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('alternative_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alternative_role', to='user.role')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role', to='user.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntryCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entry_code', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('code', models.IntegerField()),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otp', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('token', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
